#!/bin/bash

good(){
	if [ $1 -ne 0 ]; then
		echo Returned $1
		exit $1
	fi
}

rm -fr foo

cd ..

./build.sh
good $?

cd test

cp ../build/trsp trsp

echo Init foo
./trsp init foo
good $?

echo Enter foo
cd foo

echo Create module c1
./trsp module c1 --template=c --exe
good $?

mkdir c1/a
echo "#warning Hello World" >> c1/a/a.c

echo Create module c2
./trsp module c2 -tc -e
good $?

echo Create module c3
./trsp module c3 -tc -l
good $?

echo Create module c4
./trsp module c4 -tc -d
good $?

echo Build default {zig, ninja}
./trsp build
good $?

./build/c1
good $?

./build/c2
good $?

echo Build reconfigure {zig, make}
./trsp build --builder=make
good $?

./build/c1
good $?

./build/c2
good $?

echo Build reconfigure {cmake, make}
./trsp build --generator=cmake
good $?

./build/c1
good $?

./build/c2
good $?

echo Build reconfigure {cmake, ninja}
./trsp build --builder=ninja
good $?

./build/c1
good $?

./build/c2
good $?

echo Release
./trsp release
good $?

echo Config git
./trsp config --git
good $?

echo Git add
git add .
good $?

echo Register template c++
./trsp template --c++
good $?

echo Create module cpp1
./trsp module cpp1 --template=c++ --exe
good $?

echo Create module cpp2
./trsp module cpp2 -tc -l
good $?

echo Create module cpp3
./trsp module cpp3 -tc -d
good $?

echo Build reconfigure {zig, ninja}
./trsp build -gzig -bninja
good $?

./build/c1
good $?

./build/c2
good $?

./build/cpp1
good $?

echo Build reconfigure {zig, make}
./trsp build --builder=make
good $?

./build/c1
good $?

./build/c2
good $?

./build/cpp1
good $?

echo Build reconfigure {cmake, make}
./trsp build --generator=cmake
good $?

./build/c1
good $?

./build/c2
good $?

./build/cpp1
good $?

echo Build reconfigure {cmake, ninja}
./trsp build --builder=ninja
good $?

./build/c1
good $?

./build/c2
good $?

./build/cpp1
good $?

echo Leave foo
cd ..

